/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  3.0.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

castellatedMesh true;
snap            true;
addLayers       true;



geometry
{
    building.obj
    {
        type triSurfaceMesh;
        name building;
        regions {
                Walls
                {
                    name  Walls ;
                }
                inlet
                {
                    name  inlet ;
                }
                outlet
                {
                    name  outlet ;
                }
        }
    }

    
};

castellatedMeshControls
{
    maxGlobalCells      100000000;
    maxLocalCells       100000;
    minRefinementCells  40;
    maxLoadUnbalance    0.1;
    nCellsBetweenLevels 8;
    resolveFeatureAngle 30;
    allowFreeStandingZoneFaces true;


    locationInMesh ( 5.0 0 0);

    features
    (
            {
                file "building.eMesh";
                level 1;
            }
    );

    refinementSurfaces
    {
        building
        {
            level ( 0 0);
            patchInfo { type wall; }
            regions {
                 Walls 
                {
                        level ( 0 0);
                        type wall;
                }
            }
        }
    }

    refinementRegions
    {
        
        
        Walls 
        {
            mode distance;
            levels ( ( 0.1 2) );
        }
                
    
    }
}
snapControls
{
    nSmoothPatch    5;
    tolerance       6.0;
    nSolveIter      200;
    nRelaxIter      5;

    nFeatureSnapIter 10;

    explicitFeatureSnap    false;
    multiRegionFeatureSnap false;
    implicitFeatureSnap    true;

}

addLayersControls
{
    // Per final patch (so not geometry!) the layer information
    layers
    {
            {
                nSurfaceLayers 10;}
    }

    // Are the thickness parameters below relative to the undistorted
    // size of the refined cell outside layer (true) or absolute sizes (false).
    relativeSizes true;

    // Expansion factor for layer mesh
    expansionRatio 1.05;

    // Wanted thickness of final added cell layer. If multiple layers
    // is the
    // thickness of the layer furthest away from the wall.
    // Relative to undistorted size of cell outside layer.
    // is the thickness of the layer furthest away from the wall.
    // See relativeSizes parameter.
    finalLayerThickness 0.9;
    

    // Minimum thickness of cell layer. If for any reason layer
    // cannot be above minThickness do not add layer.
    // Relative to undistorted size of cell outside layer.
    minThickness 0.01;

    // If points get not extruded do nGrow layers of connected faces that are
    // also not grown. This helps convergence of the layer addition process
    // close to features.
    // Note: changed(corrected) w.r.t 17x! (didn't do anything in 17x)
    nGrow 0;

    // Advanced settings

    // When not to extrude surface. 0 is flat surface, 90 is when two faces
    // are perpendicular
    featureAngle 100;

    // At non-patched sides allow mesh to slip if extrusion direction makes
    // angle larger than slipFeatureAngle.
    slipFeatureAngle 30;

    // Maximum number of snapping relaxation iterations. Should stop
    // before upon reaching a correct mesh.
    nRelaxIter 5;

    // Number of smoothing iterations of surface normals
    nSmoothSurfaceNormals 1;

    // Number of smoothing iterations of interior mesh movement direction
    nSmoothNormals 3;

    // Smooth layer thickness over surface patches
    nSmoothThickness 10;

    // Stop layer growth on highly warped cells
    maxFaceThicknessRatio 0.5;

    // Reduce layer growth where ratio thickness to medial
    // distance is large
    maxThicknessToMedialRatio 0.3;

    // Angle used to pick up medial axis points
    // Note: changed(corrected) w.r.t 17x! 90 degrees corresponds to 130 in 17x.
    minMedianAxisAngle 90;


    // Create buffer region for new layer terminations
    nBufferCellsNoExtrude 0;


    // Overall max number of layer addition iterations. The mesher will exit
    // if it reaches this number of iterations; possibly with an illegal
    // mesh.
    nLayerIter 50;

}

meshQualityControls
{


    maxNonOrtho       65;

    maxBoundarySkewness 20;

    maxInternalSkewness 4;

    maxConcave        80;

    // Minimum cell pyramid volume; case dependent
    minVol            1e-13;

    minTetQuality    -1e+30;

    // if >0 : preserve single cells with all points on the surface if the
    // resulting volume after snapping (by approximation) is larger than
    // minVolCollapseRatio times old volume (i.e. not collapsed to flat cell).
    //  If <0 : delete always.
    //minVolCollapseRatio 0.5;

    minArea          -1;

    minTwist          0.02;

    minDeterminant    0.001;

    minFaceWeight     0.05;

    minVolRatio       0.01;

    minTriangleTwist -1;

    nSmoothScale      4;

    errorReduction    0.75;

    relaxed
    {
        maxNonOrtho       75;
    }


}

writeFlags
(
);

mergeTolerance 1e-06;

// ************************************************************************* //