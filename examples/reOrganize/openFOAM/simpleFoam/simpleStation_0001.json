{
    "workflow": {
        "root": null,
        "workflowType": "simpleFoam",
        "SolvedFields": "p U k epsilon nut",
        "AuxFields": "",
        "Templates": [],
        "nodeList": [
            "Parameters",
            "createEmptyCase",
            "CopyObjectToCase",
            "CopyBuildingObject",
            "blockMesh",
            "snappyHexMesh",
            "surfaceFeatures",
            "decomposePar",
            "controlDict",
            "fvSchemes",
            "fvSolution",
            "transportProperties",
            "turbulenceProperties",
            "defineNewBoundaryConditions",
            "buildAllRun",
            "fileWriter"
        ],
        "nodes": {
            "Parameters": {
                "Execution": {
                    "input_parameters": {
                        "OFversion": "of2212",
                        "targetDirectory": "{#moduleName}",
                        "objectFile": "station.obj",
                        "decomposeProcessors": 8
                    }
                },
                "type": "general.Parameters"
            },
            "createEmptyCase": {
                "Execution": {
                    "input_parameters": {
                        "Method": "Command list",
                        "Command": "hera-openfoam {workflow.workflowType} createEmptyCaseDirectory {Parameters.output.targetDirectory} --fields {workflow.SolvedFields}"
                    }
                },
                "type": "general.RunOsCommand"
            },
            "CopyObjectToCase": {
                "Execution": {
                    "input_parameters": {
                        "Source": "{Parameters.output.objectFile}",
                        "Target": "{Parameters.output.targetDirectory}"
                    },
                    "requires": "createEmptyCase"
                },
                "type": "general.CopyFile"
            },
            "CopyBuildingObject": {
                "Execution": {
                    "input_parameters": {
                        "Method": "Command list",
                        "Command": "surfaceMeshConvert {Parameters.output.objectFile} {Parameters.output.targetDirectory}/constant/triSurface/building.obj -scaleIn 0.001 -case {Parameters.output.targetDirectory}"
                    },
                    "requires": "CopyObjectToCase"
                },
                "type": "general.RunOsCommand"
            },
            "blockMesh": {
                "Execution": {
                    "input_parameters": {
                        "geometry": {
                            "convertToMeters": "1",
                            "cellCount": [
                                100,
                                30,
                                20
                            ],
                            "grading": [
                                1,
                                1,
                                1
                            ]
                        },
                        "boundary": [
                            {
                                "name": "domain_east",
                                "type": "patch",
                                "faces": [
                                    [
                                        3,
                                        7,
                                        6,
                                        2
                                    ]
                                ]
                            },
                            {
                                "name": "domain_west",
                                "type": "patch",
                                "faces": [
                                    [
                                        1,
                                        5,
                                        4,
                                        0
                                    ]
                                ]
                            },
                            {
                                "name": "domain_south",
                                "type": "patch",
                                "faces": [
                                    [
                                        0,
                                        4,
                                        7,
                                        3
                                    ]
                                ]
                            },
                            {
                                "name": "domain_north",
                                "type": "patch",
                                "faces": [
                                    [
                                        2,
                                        6,
                                        5,
                                        1
                                    ]
                                ]
                            },
                            {
                                "name": "domain_ceiling",
                                "type": "patch",
                                "faces": [
                                    [
                                        0,
                                        3,
                                        2,
                                        1
                                    ]
                                ]
                            },
                            {
                                "name": "domain_floor",
                                "type": "patch",
                                "faces": [
                                    [
                                        4,
                                        5,
                                        6,
                                        7
                                    ]
                                ]
                            }
                        ],
                        "vertices": [
                            [
                                -38.1,
                                -17.1,
                                8.89
                            ],
                            [
                                42.1,
                                -17.1,
                                8.89
                            ],
                            [
                                42.1,
                                4.1,
                                8.89
                            ],
                            [
                                -38.1,
                                4.1,
                                8.89
                            ],
                            [
                                -38.1,
                                -17.1,
                                13.9
                            ],
                            [
                                42.1,
                                -17.1,
                                13.9
                            ],
                            [
                                42.1,
                                4.1,
                                13.9
                            ],
                            [
                                -38.1,
                                4.1,
                                13.9
                            ]
                        ]
                    }
                },
                "type": "openFOAM.mesh.BlockMesh"
            },
            "snappyHexMesh": {
                "Execution": {
                    "input_parameters": {
                        "modules": {
                            "castellatedMesh": true,
                            "snap": false,
                            "layers": true,
                            "mergeTolerance": 1e-06
                        },
                        "Geometry": {
                            "objects": {},
                            "refinementSurfaces": {},
                            "regions": {},
                            "layers": {
                                "nSurfaceLayers": 10
                            }
                        },
                        "castellatedMeshControls": {
                            "maxLocalCells": 100000,
                            "maxGlobalCells": 100000000,
                            "minRefinementCells": 40,
                            "maxLoadUnbalance": 0.1,
                            "nCellsBetweenLevels": 8,
                            "resolveFeatureAngle": 30,
                            "allowFreeStandingZoneFaces": true,
                            "locationInMesh": [
                                2.0,
                                -6.5,
                                11.395
                            ]
                        },
                        "snapControls": {
                            "nSmoothPatch": 5,
                            "tolerance": 6.0,
                            "nSolveIter": 200,
                            "nRelaxIter": 5,
                            "nFeatureSnapIter": 10,
                            "explicitFeatureSnap": false,
                            "multiRegionFeatureSnap": false,
                            "implicitFeatureSnap": true
                        },
                        "addLayersControls": {
                            "relativeSizes": true,
                            "expansionRatio": 1.05,
                            "finalLayerThickness": 0.9,
                            "minThickness": 0.01,
                            "featureAngle": 100,
                            "slipFeatureAngle": 30,
                            "nLayerIter": 50,
                            "nRelaxedIter": 20,
                            "nRelaxIter": 5,
                            "nGrow": 0,
                            "nSmoothSurfaceNormals": 1,
                            "nSmoothNormals": 3,
                            "nSmoothThickness": 10,
                            "maxFaceThicknessRatio": 0.5,
                            "maxThicknessToMedialRatio": 0.3,
                            "minMedianAxisAngle": 90,
                            "nMedialAxisIter": 10,
                            "nBufferCellsNoExtrude": 0,
                            "additionalReporting": false
                        },
                        "meshQualityControls": {
                            "maxNonOrtho": 65,
                            "maxBoundarySkewness": 20,
                            "maxInternalSkewness": 4,
                            "maxConcave": 80,
                            "minVol": 1e-13,
                            "minTetQuality": -1e+30,
                            "minArea": -1,
                            "minTwist": 0.02,
                            "minDeterminant": 0.001,
                            "minFaceWeight": 0.05,
                            "minVolRatio": 0.01,
                            "minTriangleTwist": -1,
                            "nSmoothScale": 4,
                            "errorReduction": 0.75,
                            "relaxed": {
                                "maxNonOrtho": 75
                            }
                        },
                        "geometry": {
                            "objects": {
                                "building": {
                                    "objectName": "building",
                                    "objectType": "obj",
                                    "levels": "1",
                                    "refinementRegions": {
                                        "mode": "distance",
                                        "levels": [
                                            [
                                                0.1,
                                                2
                                            ],
                                            [
                                                0.2,
                                                1
                                            ],
                                            [
                                                0.5,
                                                1
                                            ]
                                        ]
                                    },
                                    "refinementSurfaceLevels": [
                                        1,
                                        1
                                    ],
                                    "patchType": "wall",
                                    "regions": {
                                        "Entrance1": {
                                            "name": "Entrance1",
                                            "type": "patch"
                                        },
                                        "Entrance2": {
                                            "name": "Entrance2",
                                            "type": "patch"
                                        },
                                        "Entrance3": {
                                            "name": "Entrance3",
                                            "type": "patch"
                                        },
                                        "walls": {
                                            "name": "walls",
                                            "type": "wall"
                                        }
                                    },
                                    "layers": {
                                        "nSurfaceLayers": 10
                                    }
                                }
                            },
                            "gemeotricalEntities": {}
                        }
                    }
                },
                "type": "openFOAM.mesh.SnappyHexMesh"
            },
            "surfaceFeatures": {
                "Execution": {
                    "type": "openFOAM.systemExecuters.surfaceFeaturesDict",
                    "input_parameters": {
                        "OFversion": "{Parameters.output.OFversion}",
                        "geometryData": "{snappyHexMesh.input_parameters.geometry.objects}",
                        "includeAngle": 150,
                        "nonManifoldEdges": true,
                        "openEdges": true
                    }
                },
                "type": "openFOAM.system.SurfaceFeatures"
            },
            "decomposePar": {
                "Execution": {
                    "input_parameters": {
                        "numberOfSubdomains": "{Parameters.output.decomposeProcessors}"
                    }
                },
                "type": "openFOAM.system.DecomposePar"
            },
            "controlDict": {
                "Execution": {
                    "input_parameters": {
                        "values": {
                            "application": "simpleFoam",
                            "startFrom": "startTime",
                            "startTime": 0,
                            "stopAt": "endTime",
                            "endTime": 60,
                            "deltaT": 1,
                            "writeControl": "adjustableRunTime",
                            "writeInterval": 0.1,
                            "runTimeModifiable": true,
                            "interpolate": true,
                            "adjustTimeStep": true,
                            "purgeWrite": 0,
                            "writeFormat": "ascii",
                            "writePrecision": 7,
                            "writeCompression": false,
                            "timeFormat": "general",
                            "timePrecision": 6,
                            "maxCo": 0.5,
                            "functions": [],
                            "libs": []
                        }
                    }
                },
                "type": "openFOAM.system.ControlDict"
            },
            "fvSchemes": {
                "Execution": {
                    "input_parameters": {
                        "default": {
                            "ddtScheme": "Euler",
                            "gradSchemes": {
                                "type": "Gauss",
                                "name": "linear"
                            },
                            "divSchemes": {
                                "type": "Gauss",
                                "name": "linear",
                                "parameters": ""
                            },
                            "interpolationSchemes": "linear",
                            "snGradSchemes": "uncorrected",
                            "wallDist": "meshWave",
                            "laplacianSchemes": {
                                "type": "Gauss",
                                "name": "linear",
                                "parameters": "uncorrected"
                            }
                        },
                        "fields": {
                            "p": {
                                "fluxRequired ": true,
                                "laplacianSchemes": [
                                    {
                                        "noOfOperators": 2,
                                        "coefficient": "(1|A(U))",
                                        "type": "Gauss",
                                        "name": "linear",
                                        "parameters": "uncorrected"
                                    }
                                ]
                            },
                            "U": {
                                "fluxRequired ": false,
                                "divSchemes": [
                                    {
                                        "noOfOperators": 2,
                                        "phi": "phi",
                                        "type": "Gauss",
                                        "name": "SuperBeeV",
                                        "parameters": ""
                                    }
                                ],
                                "laplacianSchemes": [
                                    {
                                        "noOfOperators": 2,
                                        "coefficient": "nuEff",
                                        "type": "Gauss",
                                        "name": "linear",
                                        "parameters": "uncorrected"
                                    },
                                    {
                                        "noOfOperators": 2,
                                        "coefficient": "AnisotropicDiffusion",
                                        "type": "Gauss",
                                        "name": "linear",
                                        "parameters": "uncorrected"
                                    }
                                ],
                                "fluxRequired": false
                            },
                            "k": {
                                "fluxRequired ": false,
                                "divSchemes": [
                                    {
                                        "noOfOperators": 2,
                                        "phi": "phi",
                                        "type": "Gauss",
                                        "name": "UMIST",
                                        "parameters": ""
                                    }
                                ],
                                "laplacianSchemes": [
                                    {
                                        "noOfOperators": 2,
                                        "coefficient": "DkEff",
                                        "type": "Gauss",
                                        "name": "linear",
                                        "parameters": "uncorrected"
                                    }
                                ]
                            },
                            "epsilon": {
                                "fluxRequired ": false,
                                "divSchemes": [
                                    {
                                        "noOfOperators": 2,
                                        "phi": "phi",
                                        "type": "Gauss",
                                        "name": "UMIST",
                                        "parameters": ""
                                    }
                                ],
                                "laplacianSchemes": [
                                    {
                                        "noOfOperators": 2,
                                        "coefficient": "DepsilonEff",
                                        "type": "Gauss",
                                        "name": "linear",
                                        "parameters": "uncorrected"
                                    }
                                ]
                            },
                            "p_rgh": {
                                "fluxRequired": true
                            },
                            "div((nuEff*dev2(T(grad(U)))))": {
                                "divSchemes": [
                                    {
                                        "noOfOperators": 1,
                                        "type": "Gauss",
                                        "name": "linear",
                                        "parameters": ""
                                    }
                                ]
                            }
                        }
                    }
                },
                "type": "openFOAM.system.FvSchemes"
            },
            "fvSolution": {
                "Execution": {
                    "input_parameters": {
                        "fields": {
                            "p": {
                                "solver": "PCG",
                                "preconditioner": "DIC",
                                "tolerance": 1e-10,
                                "relTol": 1e-05,
                                "maxIter": 5000,
                                "final": {
                                    "solver": "PCG",
                                    "preconditioner": "DIC",
                                    "tolerance": 1e-10,
                                    "relTol": 0,
                                    "maxIter": 5000
                                }
                            },
                            "U": {
                                "solver": "PBiCG",
                                "preconditioner": "DILU",
                                "tolerance": 1e-10,
                                "relTol": 1e-05,
                                "maxIter": 5000,
                                "final": {
                                    "solver": "PBiCG",
                                    "preconditioner": "DILU",
                                    "tolerance": 1e-10,
                                    "relTol": 0,
                                    "maxIter": 5000
                                }
                            },
                            "epsilon": {
                                "solver": "PBiCG",
                                "preconditioner": "DILU",
                                "tolerance": 1e-08,
                                "relTol": 0.001,
                                "maxIter": 5000,
                                "final": {
                                    "solver": "PBiCG",
                                    "preconditioner": "DILU",
                                    "tolerance": 1e-08,
                                    "relTol": 0,
                                    "maxIter": 5000
                                }
                            },
                            "k": {
                                "solver": "PBiCG",
                                "preconditioner": "DILU",
                                "tolerance": 1e-08,
                                "relTol": 0.001,
                                "maxIter": 5000,
                                "final": {
                                    "solver": "PBiCG",
                                    "preconditioner": "DILU",
                                    "tolerance": 1e-08,
                                    "relTol": 0,
                                    "maxIter": 5000
                                }
                            }
                        },
                        "solverProperties": {
                            "algorithm": "SIMPLE",
                            "residualControl": {
                                "p": 0.0001,
                                "U": 0.0001,
                                "k": 0.0001,
                                "epsilon": 0.0001
                            },
                            "solverFields": {
                                "nNonOrthogonalCorrectors": 2,
                                "pRefCell": 0,
                                "pRefValue": 0
                            },
                            "nCorrectors": 3
                        },
                        "relaxationFactors": {
                            "fields": {
                                "p": 0.15,
                                "U": 0.15,
                                "k": 0.15,
                                "epsilon": 0.15
                            },
                            "equations": {
                                "p": {
                                    "factor": 0.4,
                                    "final": 0.4
                                },
                                "U": {
                                    "factor": 0.7,
                                    "final": 0.7
                                },
                                "k": {
                                    "factor": 0.7,
                                    "final": 0.7
                                },
                                "epsilon": {
                                    "factor": 0.7,
                                    "final": 0.7
                                }
                            }
                        }
                    }
                },
                "type": "openFOAM.system.FvSolution"
            },
            "transportProperties": {
                "Execution": {
                    "input_parameters": {
                        "transportModel": "Newtonian",
                        "nu": 1e-05
                    }
                },
                "type": "openFOAM.constant.TransportProperties"
            },
            "turbulenceProperties": {
                "Execution": {
                    "input_parameters": {
                        "simulationType": "laminar",
                        "Model": "LienLeschziner"
                    }
                },
                "type": "openFOAM.constant.TurbulenceProperties"
            },
            "defineNewBoundaryConditions": {
                "Execution": {
                    "input_parameters": {
                        "fields": {
                            "U": {
                                "boundaryField": {
                                    "Entrance1": {
                                        "type": "fixedValue",
                                        "value": "uniform (0 1 0)"
                                    },
                                    "Entrance2": {
                                        "type": "zeroGradient",
                                        "value": ""
                                    },
                                    "Entrance3": {
                                        "type": "zeroGradient",
                                        "value": ""
                                    },
                                    "walls": {
                                        "type": "noSlip"
                                    }
                                }
                            },
                            "epsilon": {
                                "boundaryField": {
                                    "Entrance1": {
                                        "type": "zeroGradient",
                                        "value": ""
                                    },
                                    "Entrance2": {
                                        "type": "zeroGradient",
                                        "value": ""
                                    },
                                    "Entrance3": {
                                        "type": "zeroGradient",
                                        "value": ""
                                    },
                                    "walls": {
                                        "type": "zeroGradient",
                                        "value": ""
                                    }
                                }
                            },
                            "k": {
                                "internalField": "0.1",
                                "boundaryField": {
                                    "Entrance1": {
                                        "type": "zeroGradient",
                                        "value": ""
                                    },
                                    "Entrance2": {
                                        "type": "zeroGradient",
                                        "value": ""
                                    },
                                    "Entrance3": {
                                        "type": "zeroGradient",
                                        "value": ""
                                    },
                                    "walls": {
                                        "type": "zeroGradient",
                                        "value": ""
                                    }
                                }
                            },
                            "nut": {
                                "boundaryField": {
                                    "Entrance1": {
                                        "type": "zeroGradient",
                                        "value": ""
                                    },
                                    "Entrance2": {
                                        "type": "zeroGradient",
                                        "value": ""
                                    },
                                    "Entrance3": {
                                        "type": "zeroGradient",
                                        "value": ""
                                    },
                                    "walls": {
                                        "type": "zeroGradient",
                                        "value": ""
                                    }
                                }
                            },
                            "p": {
                                "boundaryField": {
                                    "Entrance1": {
                                        "type": "fixedValue",
                                        "value": "uniform 0"
                                    },
                                    "Entrance2": {
                                        "type": "fixedValue",
                                        "value": "uniform 0"
                                    },
                                    "Entrance3": {
                                        "type": "fixedValue",
                                        "value": "uniform 0"
                                    },
                                    "walls": {
                                        "type": "fixedFluxPressure",
                                        "rho": "rhok",
                                        "value": "uniform 0"
                                    }
                                }
                            }
                        }
                    }
                },
                "type": "openFOAM.system.ChangeDictionary"
            },
            "buildAllRun": {
                "Execution": {
                    "input_parameters": {
                        "casePath": "{Parameters.output.targetDirectory}",
                        "caseExecution": {
                            "parallelCase": true,
                            "slurm": false,
                            "getNumberOfSubdomains": 10,
                            "runFile": []
                        },
                        "parallelCase": true,
                        "runFile": [
                            {
                                "name": "blockMesh",
                                "couldRunInParallel": false,
                                "parameters": null
                            },
                            {
                                "name": "surfaceFeatureExtract",
                                "parameters": "-dict system/building",
                                "couldRunInParallel": false
                            },
                            {
                                "name": "decomposePar",
                                "parameters": "-force",
                                "couldRunInParallel": false
                            },
                            {
                                "name": "snappyHexMesh",
                                "parameters": "-overwrite",
                                "couldRunInParallel": true
                            },
                            {
                                "name": "ls -d processor* | xargs -i cp -r 0.parallel/* ./{}/0/ $1",
                                "parameters": null,
                                "couldRunInParallel": false,
                                "foamJob": false
                            },
                            {
                                "name": "changeDictionary",
                                "parameters": null,
                                "couldRunInParallel": true
                            }
                        ]
                    },
                    "requires": "createEmptyCase"
                },
                "type": "openFOAM.BuildAllrun"
            },
            "fileWriter": {
                "Execution": {
                    "input_parameters": {
                        "casePath": "{Parameters.output.targetDirectory}",
                        "Files": {
                            "blockMesh": {
                                "fileName": "system/blockMeshDict",
                                "fileContent": "{blockMesh.output.openFOAMfile}"
                            },
                            "decomposePar": {
                                "fileName": "system/decomposeParDict",
                                "fileContent": "{decomposePar.output.openFOAMfile}"
                            },
                            "snappyHexMeshDict": {
                                "fileName": "system/snappyHexMeshDict",
                                "fileContent": "{snappyHexMesh.output.openFOAMfile}"
                            },
                            "controlDict": {
                                "fileName": "system/controlDict",
                                "fileContent": "{controlDict.output.openFOAMfile}"
                            },
                            "fvSchemes": {
                                "fileName": "system/fvSchemes",
                                "fileContent": "{fvSchemes.output.openFOAMfile}"
                            },
                            "fvSolution": {
                                "fileName": "system/fvSolution",
                                "fileContent": "{fvSolution.output.openFOAMfile}"
                            },
                            "transportProperties": {
                                "fileName": "constant/transportProperties",
                                "fileContent": "{transportProperties.output.openFOAMfile}"
                            },
                            "turbulenceProperties": {
                                "fileName": "constant/turbulenceProperties",
                                "fileContent": "{turbulenceProperties.output.openFOAMfile}"
                            },
                            "changeDictionary": {
                                "fileName": "system/changeDictionaryDict",
                                "fileContent": "{defineNewBoundaryConditions.output.openFOAMfile}"
                            },
                            "surfaceFeatures": {
                                "fileName": "system",
                                "fileContent": "{surfaceFeatures.output.openFOAMfile}"
                            }
                        }
                    },
                    "requires": "createEmptyCase"
                },
                "type": "general.FilesWriter"
            }
        }
    }
}
