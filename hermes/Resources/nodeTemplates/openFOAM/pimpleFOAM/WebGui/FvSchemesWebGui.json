{
    "Schema":{
		"type":"object",
		"properties":{
            "ddtSchemes":{
                "type":"object",
                "title":"timeScheme",
                "properties":{
                    "default":{
                        "type":"string",
                        "enum":[
                            "steadyState",
                            "Euler",
                            "backward",
                            "CrankNicolson",
                            "localEuler"
                        ],
                        "description":"The discretisation schemes for each term can be selected from those listed below."
                    }
                }
            },
            "gradSchemes":{
                "type":"object",
                "title":"gradSchemes",
                "properties":{
                    "default":{
                        "type":"string",
                        "title":"default",
                        "enum":[
                            "Gauss linear",
                            "leastSquares",
                            "Gauss"
                        ],
                        "description":"The discretisation scheme"
                    },
                    "gradU":{
                        "type":"string",
                        "title":"grad(U)",
                        "description":"discretisation of velocity gradient terms is overridden to improve boundedness and stability"
                    },
                    "gradK":{
                        "type":"string",
                        "title":"grad(k)",
                        "description":"discretisation of k gradient terms is overridden to improve boundedness and stability"
                    },
                    "gradEpsilon":{
                        "type":"string",
                        "title":"grad(epsilon)",
                        "description":"discretisation of epsilon gradient terms is overridden to improve boundedness and stability"
                    }
                }
            },
            "divSchemes":{
                "type":"object",
                "title":"divSchemes",
                "properties":{
                    "default":{
                        "type":"string",
                        "title":"default",
                        "description":"contains divergence terms."
                    },
                    "divPhiU":{
                        "type":"string",
                        "title":"div(phi,U)"
                    },
                    "divPhiK":{
                        "type":"string",
                        "title":"div(phi,k)"
                    },
                    "divPhiEpsilon":{
                        "type":"string",
                        "title":"div(phi,epsilon)"
                    },
                    "divPhiE":{
                        "type":"string",
                        "title":"div(phi,e)"
                    },
                    "divPhiOmega":{
                        "type":"string",
                        "title":"div(phi,omega)"
                    },
                    "moreDivSchemesProperties":{
                        "type":"object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
   
            },
            "laplacianSchemes":{
                "type":"object",
                "title":"laplacianSchemes",
                "description":"Laplacian terms.",
                "properties":{
                    "default":{
                        "type":"string",
                        "title":"default"
                    }
                }
            },
            "interpolationSchemes":{
                "type":"object",
                "title":"interpolationSchemes",
                "description":"terms that are interpolations of values typically from cell centres to face centres",
                "properties":{
                    "default":{
                        "type":"string",
                        "title":"default"
                    }
                }
            },
            "snGradSchemes":{
                "type":"object",
                "title":"snGradSchemes",
                "description":"contains surface normal gradient terms",
                "properties":{
                    "default":{
                        "type":"string",
                        "title":"default"
                    }
                }
            },
            "wallDist":{
                "type":"object",
                "title":"wallDist",
                "properties":{
                    "method":{
                        "type":"string",
                        "title":"method"
                    }
                }
            },
            "fluxRequired":{
                "type":"object",
                "title":"fluxRequired",
                "properties":{
                    "default":{
                        "type":"string",
                        "title":"default"
                    }
                }
            }
        }
    },
    "uiSchema":{
    },
    "formData":{
        "ddtSchemes": {
            "default": "steadyState"
         },
         "gradSchemes": {
            "default": "Gauss linear",
            "gradU": "cellLimited Gauss linear 1",
            "gradK": "cellLimited Gauss linear 1",
            "gradEpsilon": "cellLimited Gauss linear 1"
         },
         "divSchemes": {
            "moreDivSchemesProperties": {
               "divNuEff": "Gauss linear"
            },
            "default": "none",
            "divPhiU": "bounded Gauss upwind",
            "divPhiK": "bounded Gauss upwind",
            "divPhiEpsilon": "bounded Gauss upwind",
            "divPhiOmega": "bounded Gauss upwind"
         },
         "laplacianSchemes": {
            "default": "Gauss linear corrected"
         },
         "interpolationSchemes": {
            "default": "linear"
         },
         "snGradSchemes": {
            "default": "corrected"
         },
         "wallDist": {
            "method": "meshWave"
         }
    }

}
