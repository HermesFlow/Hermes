/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  7                                |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

{%- import "openFOAM/mesh/utils.jinja"  as utils %}

convertToMeters {{geometry.convertToMeters}};

vertices
(
    {%- for pnt in vertices %}
        {{utils.toPoint(pnt)}}
    {%- endfor %}
);

blocks
(
    hex (0 1 2 3 4 5 6 7)
    {{utils.toPoint(geometry.cellCount)}}
    simpleGrading
    {{utils.toPoint(geometry.grading)}}
);

edges
(
    {%- for edge in edges %}
        {%- if edge['type'] =='arc' %}
            arc {{edge.point1}} {{edge.point2}} {{utils.toPoint(edge.pointM)}}
        {%- endif %}
    {%- endfor %}
);

boundary
(
    {%- for bndry in boundary %}
        {{bndry.name}}
        {
            type {{bndry.type}};
            faces
            (
                {%- for indx in range(bndry.faces|length)%}
                       {{utils.toPoint(bndry.faces[indx])}}
                {%- endfor %}

            );
            {%- if bndry['type'] =='cyclic' %}
                neighbourPatch {{bndry.neighbourPatch}};
            {%- endif %}
        }
    {%- endfor %}
);

mergePatchPairs
(
);

// ************************************************************************* //