/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  3.0.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#includeEtc "caseDicts/mesh/generation/snappyHexMeshDict.cfg"

{{ 'castellatedMesh on;' if values.castellatedMesh else 'castellatedMesh off;' }}
{{ 'snap on;' if values.snap else 'snap off;' }}
{{ 'addLayers on;' if values.castellatedMesh else 'addLayers off;' }}

geometry
{
    {%- for geometry in values.geometry %}
    {{geometry.nameSO}}
    {
        {%- for key, value in geometry.geometryObjects.items() %}
        {%- import "simpleFoam/MacroSnappyGeo.jinja" as snappy %}
        {{-snappy.macroSnappyGeo(key,value)}} {% endfor %}
    };
    {% endfor %}
};

castellatedMeshControls
{
    nCellsBetweenLevels {{values.castellatedMeshControls.nCellsBetweenLevels}};
    maxGlobalCells {{values.castellatedMeshControls.maxGlobalCells}};
    maxLocalCells {{values.castellatedMeshControls.maxLocalCells}};

    ==============================================================================================
    # to do - understand how to take the values from geometry to features,refinementR/S and layers
    ==============================================================================================

    {%- set length = values.castellatedMeshControls.features|length %}
    {% for x in range(length) %}
    features
    (
      { file  "{{values.castellatedMeshControls.features[x].file}}";
        levels {{values.castellatedMeshControls.features[x].levels}}; }

    );
    {% endfor %}
    refinementSurfaces
    {
        {%- set length = values.castellatedMeshControls.refinementSurfaces|length %}
        {%- for x in range(length) %}
        {{values.castellatedMeshControls.refinementSurfaces[x].SurfaceName}}
        {
            level {{values.castellatedMeshControls.refinementSurfaces[x].SurfaceProperties.level}};
            patchInfo { type {{values.castellatedMeshControls.refinementSurfaces[x].SurfaceProperties.patchInfo.type}}; }
        };
        {% endfor %}
    }

    refinementRegions
    {
        {%- set length = values.castellatedMeshControls.refinementRegions|length %}
        {%- for x in range(length) %}
        {{values.castellatedMeshControls.refinementRegions[x].RegionName}}
        {
            mode {{values.castellatedMeshControls.refinementRegions[x].RegionProperties.mode}};
            levels {{values.castellatedMeshControls.refinementRegions[x].RegionProperties.levels}};
        }
        {%- endfor %}
    }

    locationInMesh {{values.castellatedMeshControls.locationInMesh}};
}

snapControls
{
    explicitFeatureSnap    {{values.snapControls.explicitFeatureSnap}};
    implicitFeatureSnap    {{values.snapControls.implicitFeatureSnap}};
}


layers
{
    {%- set length = values.layers|length %}
    {%- for x in range(length) %}
	{{values.layers[x].name}}
{
nSurfaceLayers {{values.layers[x].layerProperties.nSurfaceLayers}};
}
{%- endfor %}
}


addLayersControls
{

    // Are the thickness parameters below relative to the undistorted
    // size of the refined cell outside layer (true) or absolute sizes (false).
    relativeSizes {{values.addLayersControls.relativeSizes}};

    // Per final patch (so not geometry!) the layer information
    layers
    {

    }

    // Expansion factor for layer mesh
    expansionRatio {{values.addLayersControls.expansionRatio}};

    // Wanted thickness of final added cell layer. If multiple layers
    // is the
    // thickness of the layer furthest away from the wall.
    // Relative to undistorted size of cell outside layer.
    // is the thickness of the layer furthest away from the wall.
    // See relativeSizes parameter.
    finalLayerThickness {{values.addLayersControls.finalLayerThickness}};

    // Minimum thickness of cell layer. If for any reason layer
    // cannot be above minThickness do not add layer.
    // Relative to undistorted size of cell outside layer.
    minThickness {{values.addLayersControls.minThickness}};

    // If points get not extruded do nGrow layers of connected faces that are
    // also not grown. This helps convergence of the layer addition process
    // close to features.
    // Note: changed(corrected) w.r.t 17x! (didn't do anything in 17x)
    nGrow {{values.addLayersControls.nGrow}};

    // Advanced settings

    // When not to extrude surface. 0 is flat surface, 90 is when two faces
    // are perpendicular
    featureAngle {{values.addLayersControls.featureAngle}};

    // At non-patched sides allow mesh to slip if extrusion direction makes
    // angle larger than slipFeatureAngle.
    slipFeatureAngle {{values.addLayersControls.slipFeatureAngle}};

    // Maximum number of snapping relaxation iterations. Should stop
    // before upon reaching a correct mesh.
    nRelaxIter {{values.addLayersControls.nRelaxIter}};

    // Number of smoothing iterations of surface normals
    nSmoothSurfaceNormals {{values.addLayersControls.nSmoothSurfaceNormals}};

    // Number of smoothing iterations of interior mesh movement direction
    nSmoothNormals {{values.addLayersControls.nSmoothNormals}};

    // Smooth layer thickness over surface patches
    nSmoothThickness {{values.addLayersControls.nSmoothThickness}};

    // Stop layer growth on highly warped cells
    maxFaceThicknessRatio {{values.addLayersControls.maxFaceThicknessRatio}};

    // Reduce layer growth where ratio thickness to medial
    // distance is large
    maxThicknessToMedialRatio {{values.addLayersControls.maxThicknessToMedialRatio}};

    // Angle used to pick up medial axis points
    // Note: changed(corrected) w.r.t 17x! 90 degrees corresponds to 130 in 17x.
    minMedianAxisAngle {{values.addLayersControls.minMedianAxisAngle}};


    // Create buffer region for new layer terminations
    nBufferCellsNoExtrude {{values.addLayersControls.nBufferCellsNoExtrude}};


    // Overall max number of layer addition iterations. The mesher will exit
    // if it reaches this number of iterations; possibly with an illegal
    // mesh.
    nLayerIter {{values.addLayersControls.nLayerIter}};

}

meshQualityControls
{
}

writeFlags
(
    {%- for x in range(values.writeFlags|length) %}
    {{values.writeFlags[x]}}
    {%- endfor %}
);

mergeTolerance {{values.mergeTolerance}};

// ************************************************************************* //