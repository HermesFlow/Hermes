/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  3.0.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //



convertToMeters {{geometry.convertToMeters}};

vertices
(
    {%- for pnt in vertices %}
        ({%- for coord in pnt %} {{ coord }} {%- endfor %})
    {%- endfor %}
);



{%- import "openFOAM/blockMesh/MacroSBlockMeshGrading.jinja" as Grading %}

blocks
(
    hex (0 1 2 3 4 5 6 7)
    ({%- for x in geometry.cellCount %} {{x}} {%- endfor %})
    simpleGrading
    ({%- for x in geometry.grading %} {{x}} {%- endfor %})
);

edges
(
);

boundary
(
    {%- for bndry in boundary %}
        {{bndry.name }}
        {
            type {{bndry.type}};
            faces
            (
                {%- for indx in range(bndry.faces|length)%}
                    ({%- for face in bndry.faces[indx] %} {{ face }} {%- endfor %})

                {%- endfor %}

            );
            {%- if bndry['Type'] =='cyclic' %}
                neighbourPatch {{bndry.neighbourPatch}};
            {%- endif %}
        }
    {%- endfor %}
);

mergePatchPairs
(
);

// ************************************************************************* //