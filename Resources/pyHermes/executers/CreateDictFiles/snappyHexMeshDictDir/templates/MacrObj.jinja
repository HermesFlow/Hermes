{#-macro that will print dictionary values, include nested dictionaties-#}
{%- macro macrObj(dict,Bspace) -%}
{%- set space=' ' -%}
{%- for key, value in dict.items() -%}
{%- if key == "writeFlags" -%}
{%- import "MacroWriteFlags.jinja" as macroWF -%}
{{macroWF.MacroWriteFlags(value)}}
{%- elif key == "features" -%}
{%- import "MacroFeatures.jinja" as macroFe -%}
{{macroFe.MacroFeatures(value,Bspace)}}
{%- elif key == "patchInfo" %}
{{ space|safe*Bspace }}{{key-}}
{%- for key, value in value.items() -%}
{{ space|safe*1 }}{ {{ key }} {{ value -}}; }
{%- endfor -%}
{%- elif value is mapping %}
{{ space|safe*Bspace }}{{key}}
{{ space|safe*Bspace }}{
{{macrObj(value,Bspace+4)}}
{{ space|safe*Bspace }}}
{% else -%}
{%- if key|length<12 -%}
{% set lenSpace=12-key|length %}
{#-multiply 1 spcace in the wanted lenght - lenSpace'-#}
{{- space|safe*Bspace }}{{ key }} {{ space|safe*lenSpace }} {{ value -}};
{%- else -%}
{{- space|safe*Bspace }}{{ key }} {{ value -}};
{%- endif %}
{% endif %}
{%- endfor -%}
{%- endmacro -%}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
